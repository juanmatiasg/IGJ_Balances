//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebService
{


    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName = "WebService.IGJ_GenericSoap")]
    public interface IGJ_GenericSoap
    {

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ListTabGen", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults = true)]
        System.Threading.Tasks.Task<WebService.ArrayOfXElement> ListTabGenAsync(string tipotabla);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/GetSociedad", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults = true)]
        System.Threading.Tasks.Task<WebService.ArrayOfXElement> GetSociedadAsync(int NroCorrelativo);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/GetSociedadPOO", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults = true)]
        System.Threading.Tasks.Task<WebService.Entidad> GetSociedadPOOAsync(int NroCorrelativo);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/GetSociedadbyCUIT", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults = true)]
        System.Threading.Tasks.Task<WebService.Entidad> GetSociedadbyCUITAsync(long NroCUIT);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/GetSociedadesPOO", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults = true)]
        System.Threading.Tasks.Task<WebService.Entidad[]> GetSociedadesPOOAsync(string RazonSocial);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/GetSociedades", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults = true)]
        System.Threading.Tasks.Task<WebService.ArrayOfXElement> GetSociedadesAsync(string RazonSocial);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/GetSociedadFiltradoTipo", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults = true)]
        System.Threading.Tasks.Task<WebService.ArrayOfXElement> GetSociedadFiltradoTipoAsync(int NroCorrelativo, int TipoSoc);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/GetSociedadFiltradoTipoPOO", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults = true)]
        System.Threading.Tasks.Task<WebService.Entidad[]> GetSociedadFiltradoTipoPOOAsync(int NroCorrelativo, int TipoSoc);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/GetSociedadesFiltradoTipoPOO", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults = true)]
        System.Threading.Tasks.Task<WebService.ArrayOfXElement> GetSociedadesFiltradoTipoPOOAsync(string RazonSocial, int TipoSoc);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/GetSociedadesFiltradoTipo", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults = true)]
        System.Threading.Tasks.Task<WebService.ArrayOfXElement> GetSociedadesFiltradoTipoAsync(string RazonSocial, int TipoSoc);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/GetEsquemaValidacionSistema", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults = true)]
        System.Threading.Tasks.Task<WebService.ArrayOfXElement> GetEsquemaValidacionSistemaAsync(int Sistema);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/GetSociedadesAutocomplete", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults = true)]
        System.Threading.Tasks.Task<string[]> GetSociedadesAutocompleteAsync(string prefixText, int count);
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://tempuri.org/")]
    public partial class Entidad
    {

        private int nroCorrelativoField;

        private string razonSocialField;

        private string cuitField;

        private int tipoSocIdField;

        private string tipoSocField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order = 0)]
        public int NroCorrelativo
        {
            get
            {
                return this.nroCorrelativoField;
            }
            set
            {
                this.nroCorrelativoField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order = 1)]
        public string RazonSocial
        {
            get
            {
                return this.razonSocialField;
            }
            set
            {
                this.razonSocialField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order = 2)]
        public string Cuit
        {
            get
            {
                return this.cuitField;
            }
            set
            {
                this.cuitField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order = 3)]
        public int TipoSocId
        {
            get
            {
                return this.tipoSocIdField;
            }
            set
            {
                this.tipoSocIdField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order = 4)]
        public string TipoSoc
        {
            get
            {
                return this.tipoSocField;
            }
            set
            {
                this.tipoSocField = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    public interface IGJ_GenericSoapChannel : WebService.IGJ_GenericSoap, System.ServiceModel.IClientChannel
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    public partial class GJ_GenericSoapClient : System.ServiceModel.ClientBase<WebService.IGJ_GenericSoap>, WebService.IGJ_GenericSoap
    {

        /// <summary>
        /// Implemente este método parcial para configurar el punto de conexión de servicio.
        /// </summary>
        /// <param name="serviceEndpoint">El punto de conexión para configurar</param>
        /// <param name="clientCredentials">Credenciales de cliente</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);

        public GJ_GenericSoapClient(EndpointConfiguration endpointConfiguration) :
                base(GJ_GenericSoapClient.GetBindingForEndpoint(endpointConfiguration), GJ_GenericSoapClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }

        public GJ_GenericSoapClient(EndpointConfiguration endpointConfiguration, string remoteAddress) :
                base(GJ_GenericSoapClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }

        public GJ_GenericSoapClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) :
                base(GJ_GenericSoapClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }

        public GJ_GenericSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) :
                base(binding, remoteAddress)
        {
        }

        public System.Threading.Tasks.Task<WebService.ArrayOfXElement> ListTabGenAsync(string tipotabla)
        {
            return base.Channel.ListTabGenAsync(tipotabla);
        }

        public System.Threading.Tasks.Task<WebService.ArrayOfXElement> GetSociedadAsync(int NroCorrelativo)
        {
            return base.Channel.GetSociedadAsync(NroCorrelativo);
        }

        public System.Threading.Tasks.Task<WebService.Entidad> GetSociedadPOOAsync(int NroCorrelativo)
        {
            return base.Channel.GetSociedadPOOAsync(NroCorrelativo);
        }

        public System.Threading.Tasks.Task<WebService.Entidad> GetSociedadbyCUITAsync(long NroCUIT)
        {
            return base.Channel.GetSociedadbyCUITAsync(NroCUIT);
        }

        public System.Threading.Tasks.Task<WebService.Entidad[]> GetSociedadesPOOAsync(string RazonSocial)
        {
            return base.Channel.GetSociedadesPOOAsync(RazonSocial);
        }

        public System.Threading.Tasks.Task<WebService.ArrayOfXElement> GetSociedadesAsync(string RazonSocial)
        {
            return base.Channel.GetSociedadesAsync(RazonSocial);
        }

        public System.Threading.Tasks.Task<WebService.ArrayOfXElement> GetSociedadFiltradoTipoAsync(int NroCorrelativo, int TipoSoc)
        {
            return base.Channel.GetSociedadFiltradoTipoAsync(NroCorrelativo, TipoSoc);
        }

        public System.Threading.Tasks.Task<WebService.Entidad[]> GetSociedadFiltradoTipoPOOAsync(int NroCorrelativo, int TipoSoc)
        {
            return base.Channel.GetSociedadFiltradoTipoPOOAsync(NroCorrelativo, TipoSoc);
        }

        public System.Threading.Tasks.Task<WebService.ArrayOfXElement> GetSociedadesFiltradoTipoPOOAsync(string RazonSocial, int TipoSoc)
        {
            return base.Channel.GetSociedadesFiltradoTipoPOOAsync(RazonSocial, TipoSoc);
        }

        public System.Threading.Tasks.Task<WebService.ArrayOfXElement> GetSociedadesFiltradoTipoAsync(string RazonSocial, int TipoSoc)
        {
            return base.Channel.GetSociedadesFiltradoTipoAsync(RazonSocial, TipoSoc);
        }

        public System.Threading.Tasks.Task<WebService.ArrayOfXElement> GetEsquemaValidacionSistemaAsync(int Sistema)
        {
            return base.Channel.GetEsquemaValidacionSistemaAsync(Sistema);
        }

        public System.Threading.Tasks.Task<string[]> GetSociedadesAutocompleteAsync(string prefixText, int count)
        {
            return base.Channel.GetSociedadesAutocompleteAsync(prefixText, count);
        }

        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }

        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.IGJ_GenericSoap))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            if ((endpointConfiguration == EndpointConfiguration.IGJ_GenericSoap12))
            {
                System.ServiceModel.Channels.CustomBinding result = new System.ServiceModel.Channels.CustomBinding();
                System.ServiceModel.Channels.TextMessageEncodingBindingElement textBindingElement = new System.ServiceModel.Channels.TextMessageEncodingBindingElement();
                textBindingElement.MessageVersion = System.ServiceModel.Channels.MessageVersion.CreateVersion(System.ServiceModel.EnvelopeVersion.Soap12, System.ServiceModel.Channels.AddressingVersion.None);
                result.Elements.Add(textBindingElement);
                System.ServiceModel.Channels.HttpTransportBindingElement httpBindingElement = new System.ServiceModel.Channels.HttpTransportBindingElement();
                httpBindingElement.AllowCookies = true;
                httpBindingElement.MaxBufferSize = int.MaxValue;
                httpBindingElement.MaxReceivedMessageSize = int.MaxValue;
                result.Elements.Add(httpBindingElement);
                return result;
            }
            throw new System.InvalidOperationException(string.Format("No se pudo encontrar un punto de conexión con el nombre \"{0}\".", endpointConfiguration));
        }

        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.IGJ_GenericSoap))
            {
                return new System.ServiceModel.EndpointAddress("http://zidane:9020/WS-IGJ-Generic.asmx");
            }
            if ((endpointConfiguration == EndpointConfiguration.IGJ_GenericSoap12))
            {
                return new System.ServiceModel.EndpointAddress("http://zidane:9020/WS-IGJ-Generic.asmx");
            }
            throw new System.InvalidOperationException(string.Format("No se pudo encontrar un punto de conexión con el nombre \"{0}\".", endpointConfiguration));
        }

        public enum EndpointConfiguration
        {

            IGJ_GenericSoap,

            IGJ_GenericSoap12,
        }
    }

    [System.Xml.Serialization.XmlSchemaProviderAttribute(null, IsAny = true)]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil-lib", "2.1.0.0")]
    public partial class ArrayOfXElement : object, System.Xml.Serialization.IXmlSerializable
    {

        private System.Collections.Generic.List<System.Xml.Linq.XElement> nodesList = new System.Collections.Generic.List<System.Xml.Linq.XElement>();

        public ArrayOfXElement()
        {
        }

        public virtual System.Collections.Generic.List<System.Xml.Linq.XElement> Nodes
        {
            get
            {
                return this.nodesList;
            }
        }

        public virtual System.Xml.Schema.XmlSchema GetSchema()
        {
            throw new System.NotImplementedException();
        }

        public virtual void WriteXml(System.Xml.XmlWriter writer)
        {
            System.Collections.Generic.IEnumerator<System.Xml.Linq.XElement> e = nodesList.GetEnumerator();
            for (
            ; e.MoveNext();
            )
            {
                ((System.Xml.Serialization.IXmlSerializable)(e.Current)).WriteXml(writer);
            }
        }

        public virtual void ReadXml(System.Xml.XmlReader reader)
        {
            for (
            ; (reader.NodeType != System.Xml.XmlNodeType.EndElement);
            )
            {
                if ((reader.NodeType == System.Xml.XmlNodeType.Element))
                {
                    System.Xml.Linq.XElement elem = new System.Xml.Linq.XElement("default");
                    ((System.Xml.Serialization.IXmlSerializable)(elem)).ReadXml(reader);
                    Nodes.Add(elem);
                }
                else
                {
                    reader.Skip();
                }
            }
        }
    }
}
