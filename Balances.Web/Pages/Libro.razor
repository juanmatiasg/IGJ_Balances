


@using Balances.DTO;
@functions {
    string SepararMayusculas(string input)
    {
        return System.Text.RegularExpressions.Regex.Replace(input, @"(?<=[a-z])(?=[A-Z])", " ");
    }
}

@if (!libext.Original.NoSabeNoContesta)
{
<div class="row">
        <div class="col-md-2 mt-1">
            <label>@SepararMayusculas(@libext.Tipo)</label>
        </div>
        <div class="col-md-2 mt-1">
            <input placeholder="Nombre del Libro" class="form-control" @bind="libext.Nombre" />
            <small id="msgError" class="text-danger">@msgErrorNombre</small>

        </div>
        <div class="col-md-1  mt-1">
            <input placeholder="Nro.Rúbrica" class="form-control" @bind=libext.NumeroRubrica />
            <small id="msgError" class="text-danger">@msgErrorNroRubrica</small>

        </div>
        <div class="col-md-2  mt-1">
            <input type="date" placeholder="Fecha Rúbrica" class="form-control" @bind=libext.FechaRubrica  />
        </div>
        <div class="col-md-1  mt-1">
            <input placeholder="Folio" class="form-control" @bind=libext.Folio />
            <small id="msgError" class="text-danger">@msgErrorFolio</small>

        </div>
        <div class="col-md-2  mt-1">
            <input type="date" placeholder="Fecha última Registración" class="form-control" @bind=libext.FechaUltimaRegistracion  />

        </div>
        <div class="col-md-2 mt-1">
            <div class="form-check">
                <input type="checkbox" class="form-check-input" @bind="libext.NoSabeNoContesta" />
                <label class="form-check-label">N/C</label>
            </div>
        </div>
 </div>
    
}
else
{
    <div class="row">
        <div class="col-md-2 mt-1">
            <label>@SepararMayusculas(@libext.Tipo)</label>
        </div>
        <div class="col-md-2 mt-1">
            <input placeholder="Nombre del Libro" class="form-control" @bind="libext.Nombre" disabled />
        </div>
        <div class="col-md-1  mt-1">
            <input placeholder="Nro.Rúbrica" class="form-control" @bind=libext.NumeroRubrica disabled />
        </div>
        <div class="col-md-2  mt-1">
            <input type="date" placeholder="Fecha Rúbrica" class="form-control" @bind=libext.FechaRubrica disabled />
        </div>
        <div class="col-md-1  mt-1">
            <input placeholder="Folio" class="form-control" @bind=libext.Folio disabled/>
        </div>
        <div class="col-md-2  mt-1">
            <input type="date" placeholder="Fecha última Registración" class="form-control" @bind=libext.FechaUltimaRegistracion disabled/>

        </div>
        <div class="col-md-2 mt-1">
            <div class="form-check">
                <input type="checkbox" class="form-check-input" @bind="libext.NoSabeNoContesta" />
                <label class="form-check-label">N/C</label>
            </div>
        </div>
    </div>

    
}

@code {
    private string msgErrorFolio = "";
    private string msgErrorNroRubrica = "";
    private string msgErrorNombre = "";


    [Parameter]
    public LibroDto libroP { set { libext.Original = value;
        }
        get { return libext.Original; }
    }

    public LibroDtoExtended libext = new LibroDtoExtended();


    [Parameter]
    public EventCallback<object> OnBlur { get; set; }

    private async Task HandleBlur(FocusEventArgs args)
    {
        await OnBlur.InvokeAsync(libext);
    }



  
    protected override Task OnInitializedAsync()
    {
        libroP.FechaRubrica = DateTime.Now;
        libroP.FechaUltimaRegistracion = DateTime.Now;

        return base.OnInitializedAsync();
    }

 

}
