@page "/EstadoContable/{balid?}"
@using AutoMapper
@using Balances.DTO;
@using Balances.Model;
@using Balances.Utilities;
@using Balances.Web.Services
@using Balances.Web.Services.Contracts;
@using Balances.Web.Services.Implementation;
@using System.Globalization;
@using System.Text.RegularExpressions;
@using System.Reflection;
@using Blazorise.Extensions;
@using Microsoft.AspNetCore.Http;
@using CurrieTechnologies.Razor.SweetAlert2;


@inject IEstadoContableClientService estadoContableService;
@inject NavigationManager NavigationManager
@inject IBalanceClientService balanceService
@inject ISessionClientService sesionService
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage
@inject Blazored.LocalStorage.ILocalStorageService LocalStorage
@inject SweetAlertService swal
@inject NotificationService notificationService
@inject IMapper mapper




<Navegacion PaginaActiva="EstadoContable" TramiteIniciado="true" balid="@balid"></Navegacion>

<!---------------------------------------------------------------->
<div class="container ">
    <div Class="card">

        <div class="card-header" style="color: white; font-weight: bold; text-align: center; background-color:#15153D;">
            Estados Contables
        </div>
        <EditForm Model="estadoContableDto">

            <RadzenCard class="card-body d-flex flex-column gap-2 align-items-center rz-border-radius-6">


                <div class="d-flex gap-1 w-100">
                    <FluentValidationValidator />
                    <!-- Período -->
                    <div class="card w-50">
                        <h5 class="card-header" style="font-weight: 400;color:#15153D">Período</h5>
                        <div class="card-body">

                            <RadzenStack class="mb-2">
                                <RadzenFormField Text="Tipo de balance" Style="width:100%">
                                    <RadzenDropDown @bind-Value=@estadoContableDto.tipoBalance Data=@tipoDeBalance Name="DropDownBindValue" Style="width:100%" />
                                </RadzenFormField>

                                <ValidationMessage For="@(()=> estadoContableDto.tipoBalance)" />
                            </RadzenStack>

                            <RadzenStack class=" mb-2">
                                <RadzenFormField Text="Fecha de Inicio" Style="width:100%" Component="DatePickerTimeOnlyType">
                                    <RadzenDatePicker @bind-Value="@(estadoContableDto.fechaInicio)" DateFormat="dd/MM/yyyy" Name="DatePickerTimeOnlyType" Placeholder="dd/mm/aaaa" Disabled></RadzenDatePicker>
                                </RadzenFormField>

                                <ValidationMessage For="@(()=> estadoContableDto.fechaInicio)" />
                            </RadzenStack>

                            <RadzenStack>
                                <RadzenFormField Text="Fecha de Cierre" Style="width:100%" Component="DatePickerTimeOnlyType">
                                    <RadzenDatePicker @bind-Value="@(estadoContableDto.fechaEstado)" DateFormat="dd/MM/yyyy" Name="DatePickerTimeOnlyType" Placeholder="dd/mm/aaaa" Disabled></RadzenDatePicker>
                                </RadzenFormField>
                                <ValidationMessage For="@(()=> estadoContableDto.fechaEstado)" />
                            </RadzenStack>
                        </div>
                    </div>

                    <!-- Aprobado por -->
                    <div class="card w-50">
                        <h5 class="card-header" style="font-weight: 400;color:#15153D">Aprobado por</h5>
                        <div class="card-body">

                            <RadzenStack class=" mb-2">
                                <RadzenFormField Text="Fecha de Acta de Reunión de Autoridades" Component="DatePickerTimeOnlyType" Style="width:100%">
                                    <RadzenDatePicker @bind-Value="@(estadoContableDto.fechaReunionDirectorio)" DateFormat="dd/MM/yyyy" Name="DatePickerTimeOnlyType" Placeholder="dd/mm/aaaa"></RadzenDatePicker>
                                </RadzenFormField>
                            </RadzenStack>
                            <ValidationMessage For="@(()=> estadoContableDto.fechaReunionDirectorio)" />

                            <RadzenStack class=" mb-2">
                                <RadzenFormField Text="Fecha de Acta de Reunión de Socios" Component="DatePickerTimeOnlyType" Style="width:100%">
                                    <RadzenDatePicker @bind-Value="@(estadoContableDto.fechaAsamblea)" DateFormat="dd/MM/yyyy" Name="DatePickerTimeOnlyType" Placeholder="dd/mm/aaaa"></RadzenDatePicker>
                                </RadzenFormField>
                            </RadzenStack>
                            <ValidationMessage For="@(()=> estadoContableDto.fechaAsamblea)" />

                        </div>
                    </div>
                </div>

                <!-- -->
                <div class="d-flex  w-100">

                    <!-- Rubros del Balance -->
                    <div class="card w-50  ">
                        <h5 class="card-header" style="font-weight: 400;color:#15153D">Rubros del Balance</h5>

                        <div class="card-body d-flex flex-column gap-1">
                            <div class="">

                                <div class=" gap-1 w-100 d-flex">

                                    <!--Activo corriente-->
                                    <div class=" w-50">
                                        <h5 class="card-header" style="font-weight: 400;color:#15153D">Activo Corriente</h5>

                                        <div class="d-flex flex-column gap-1">

                                            <RadzenStack>
                                                <RadzenFormField Text="Caja Y Bancos" Style="width:100%">
                                                    <RadzenNumeric TValue="decimal" Format="c" Culture=@argentinianCulture @bind-Value=@estadoContableDto.cajaYBancos InputAttributes="@(new Dictionary<string,object>(){ { "aria-label", "enter value" }})" Style="width:100%;text-align:end" />
                                                </RadzenFormField>
                                                <ValidationMessage For="@(()=> estadoContableDto.cajaYBancos)" />
                                            </RadzenStack>

                                            <RadzenStack>
                                                <RadzenFormField Text="Inversiones" Style="width:100%">
                                                    <RadzenNumeric TValue="decimal" Format="c" Culture=@argentinianCulture @bind-Value=@estadoContableDto.inversionesActivoCorriente InputAttributes="@(new Dictionary<string,object>(){ { "aria-label", "enter value" }})" Style="width:100%;text-align:end" />
                                                </RadzenFormField>
                                                <ValidationMessage For="@(()=> estadoContableDto.inversionesActivoCorriente)" />
                                            </RadzenStack>




                                            <RadzenStack>
                                                <RadzenFormField Text="Bienes de Cambios" Style="width:100%">
                                                    <RadzenNumeric TValue="decimal" Format="c" Culture=@argentinianCulture @bind-Value=@estadoContableDto.bienesDeCambio InputAttributes="@(new Dictionary<string,object>(){ { "aria-label", "enter value" }})" Style="width:100%;text-align:end" />
                                                </RadzenFormField>
                                                <ValidationMessage For="@(()=> estadoContableDto.bienesDeCambio)" />
                                            </RadzenStack>


                                            <RadzenStack>
                                                <RadzenFormField Text="Activo Corriente Restante" Style="width:100%">
                                                    <RadzenNumeric TValue="decimal" Format="c" Culture=@argentinianCulture @bind-Value=@estadoContableDto.activoCorrienteRestante InputAttributes="@(new Dictionary<string,object>(){ { "aria-label", "enter value" }})" Style="width:100%;text-align:end" />
                                                </RadzenFormField>
                                                <ValidationMessage For="@(()=> estadoContableDto.activoCorrienteRestante)" />
                                            </RadzenStack>

                                            <RadzenStack class=" ">
                                                <RadzenFormField Text="Total Activo Corriente" Style="width:100%">
                                                    <RadzenNumeric TValue="decimal" Format="c" Culture=@argentinianCulture @bind-Value=@estadoContableDto.activoCorriente InputAttributes="@(new Dictionary<string,object>(){ { "aria-label", "enter value" }})" Style="width:100%;text-align:end" Disabled />
                                                </RadzenFormField>
                                                <ValidationMessage For="@(()=> estadoContableDto.activoCorriente)" />
                                            </RadzenStack>
                                        </div>
                                    </div>

                                    <!--Activo No corriente-->
                                    <div class=" w-50">
                                        <h5 class="card-header" style="font-weight: 400;color:#15153D">Activo No Corriente</h5>

                                        <div class="d-flex flex-column gap-1">
                                            <RadzenStack>
                                                <RadzenFormField Text="Bienes de Uso" Style="width:100%">
                                                    <RadzenNumeric TValue="decimal" Format="c" Culture=@argentinianCulture @bind-Value=@estadoContableDto.bienesDeUso InputAttributes="@(new Dictionary<string,object>(){ { "aria-label", "enter value" }})" Style="width:100%;text-align:end" />
                                                </RadzenFormField>
                                                <ValidationMessage For="@(()=> estadoContableDto.bienesDeUso)" />
                                            </RadzenStack>


                                            <RadzenStack>
                                                <RadzenFormField Text="Propiedades de Inversión" Style="width:100%">
                                                    <RadzenNumeric TValue="decimal" Format="c" Culture=@argentinianCulture @bind-Value=@estadoContableDto.propiedadesDeInversion InputAttributes="@(new Dictionary<string,object>(){ { "aria-label", "enter value" }})" Style="width:100%;text-align:end" />
                                                </RadzenFormField>
                                                <ValidationMessage For="@(()=> estadoContableDto.propiedadesDeInversion)" />
                                            </RadzenStack>



                                            <RadzenStack>
                                                <RadzenFormField Text="Inversiones" Style="width:100%">
                                                    <RadzenNumeric TValue="decimal" Format="c" Culture=@argentinianCulture @bind-Value=@estadoContableDto.inversionesActivoNoCorriente InputAttributes="@(new Dictionary<string,object>(){ { "aria-label", "enter value" }})" Style="width:100%;text-align:end" />
                                                </RadzenFormField>
                                                <ValidationMessage For="@(()=> estadoContableDto.inversionesActivoNoCorriente)" />
                                            </RadzenStack>

                                            <RadzenStack>
                                                <RadzenFormField Text="Activo No Corriente Restante" Style="width:100%">
                                                    <RadzenNumeric TValue="decimal" Format="c" Culture=@argentinianCulture @bind-Value=@estadoContableDto.activoNoCorrienteRestante InputAttributes="@(new Dictionary<string,object>(){ { "aria-label", "enter value" }})" Style="width:100%;text-align:end" />
                                                </RadzenFormField>
                                                <ValidationMessage For="@(()=> estadoContableDto.activoNoCorrienteRestante)" />
                                            </RadzenStack>


                                            <RadzenStack>
                                                <RadzenFormField Text="Total Activo No Corriente" Style="width:100%">
                                                    <RadzenNumeric TValue="decimal" Format="c" Culture=@argentinianCulture @bind-Value=@estadoContableDto.activoNoCorriente InputAttributes="@(new Dictionary<string,object>(){ { "aria-label", "enter value" }})" Style="width:100%;text-align:end" Disabled />
                                                </RadzenFormField>
                                                <ValidationMessage For="@(()=> estadoContableDto.activoNoCorriente)" />
                                            </RadzenStack>
                                        </div>
                                    </div>

                                </div>

                                <RadzenFormField Text="Total Activo" Style="width:100%">
                                    <RadzenNumeric TValue="decimal" Format="c" Culture=@argentinianCulture @bind-Value=@estadoContableDto.totalActivo InputAttributes="@(new Dictionary<string,object>(){ { "aria-label", "enter value" }})" Style="width:100%;" Disabled />
                                </RadzenFormField>
                                <ValidationMessage For="@(()=> estadoContableDto.totalActivo)" />
                            </div>

                            <!--pasivo-->
                            <div class="">

                                <div class=" gap-1 w-100 d-flex">
                                    <div class="w-50">
                                        <h5 class="card-header" style="font-weight: 400;color:#15153D">Pasivo Corriente</h5>

                                        <RadzenStack class=" w-50">
                                            <RadzenFormField Text="Pasivo Corriente" Style="width:100%">
                                                <RadzenNumeric TValue="decimal" Format="c" Culture=@argentinianCulture @bind-Value=@estadoContableDto.deudorPasivoCorriente InputAttributes="@(new Dictionary<string,object>(){ { "aria-label", "enter value" }})" Style="width:100%;text-align:end" />
                                            </RadzenFormField>
                                            <ValidationMessage For="@(()=> estadoContableDto.deudorPasivoCorriente)" />
                                        </RadzenStack>

                                    </div>

                                    <div class="w-50">
                                        <h5 class="card-header" style="font-weight: 400;color:#15153D">Pasivo No Corriente</h5>

                                        <RadzenStack class="w-50">
                                            <RadzenFormField Text="Pasivo No Corriente" Style="width:100%">
                                                <RadzenNumeric TValue="decimal" Format="c" Culture=@argentinianCulture @bind-Value=@estadoContableDto.deudorPasivoNoCorriente InputAttributes="@(new Dictionary<string,object>(){ { "aria-label", "enter value" }})" Style="width:100%;text-align:end" />
                                            </RadzenFormField>
                                            <ValidationMessage For="@(()=> estadoContableDto.deudorPasivoNoCorriente)" />
                                        </RadzenStack>
                                    </div>

                                </div>


                                <RadzenFormField Text="Total Pasivo" Style="width:100%">
                                    <RadzenNumeric TValue="decimal" Format="c" Culture=@argentinianCulture @bind-Value=@estadoContableDto.totalPasivo InputAttributes="@(new Dictionary<string,object>(){ { "aria-label", "enter value" }})" Style="width:100%;" Disabled />
                                </RadzenFormField>
                                <ValidationMessage For="@(()=> estadoContableDto.totalPasivo)" />

                            </div>

                            <div class="">
                                <RadzenFormField Text="Patrimonio Neto" Style="width:100%">
                                    <RadzenNumeric TValue="decimal" Format="c" Culture=@argentinianCulture @bind-Value=@estadoContableDto.patrimonioNeto InputAttributes="@(new Dictionary<string,object>(){ { "aria-label", "enter value" }})" Style="width:100%;" Disabled />
                                </RadzenFormField>
                                <ValidationMessage For="@(()=> estadoContableDto.patrimonioNeto)" />
                            </div>

                        </div>

                    </div>


                    <div class="card w-50">
                        <h5 class="card-header" style="font-weight: 400;color:#15153D">
                            Rubros del Patrimonio Neto
                        </h5>

                        <div class="card-body d-flex flex-column gap-1">

                            <div class="w-100">
                                <!-- Rubros del Patrimonio Neto -->
                                <div class="d-flex gap-1">

                                    <div class="w-50">

                                        <RadzenStack class="mt-2 mb-2">
                                            <RadzenFormField Text="Capital Suscripto" Style="width:100%">
                                                <RadzenNumeric TValue="decimal" Format="c" Culture=@argentinianCulture @bind-Value=@estadoContableDto.capitalSuscripto InputAttributes="@(new Dictionary<string,object>(){ { "aria-label", "enter value" }})" Style="width:100%;text-align:end" />
                                            </RadzenFormField>
                                            <ValidationMessage For="@(()=> estadoContableDto.capitalSuscripto)" />
                                        </RadzenStack>

                                        <RadzenStack class="mt-2 mb-2">
                                            <RadzenFormField Text="Ajuste de Capital" Style="width:100%">
                                                <RadzenNumeric TValue="decimal" Format="c" Culture=@argentinianCulture @bind-Value=@estadoContableDto.ajusteCapital InputAttributes="@(new Dictionary<string,object>(){ { "aria-label", "enter value" }})" Style="width:100%;text-align:end" />
                                            </RadzenFormField>
                                            <ValidationMessage For="@(()=> estadoContableDto.ajusteCapital)" />
                                        </RadzenStack>

                                        <RadzenStack class="mt-2 mb-2">
                                            <RadzenFormField Text="Aportes Irrevocables" Style="width:100%">
                                                <RadzenNumeric TValue="decimal" Format="c" Culture=@argentinianCulture @bind-Value=@estadoContableDto.aportesIrrevocables InputAttributes="@(new Dictionary<string,object>(){ { "aria-label", "enter value" }})" Style="width:100%;text-align:end" />
                                            </RadzenFormField>
                                            <ValidationMessage For="@(()=> estadoContableDto.aportesIrrevocables)" />
                                        </RadzenStack>

                                        <RadzenStack class="mt-2 mb-2">
                                            <RadzenFormField Text="Prima Emisión" Style="width:100%">
                                                <RadzenNumeric TValue="decimal" Format="c" Culture=@argentinianCulture @bind-Value=@estadoContableDto.primaEmision InputAttributes="@(new Dictionary<string,object>(){ { "aria-label", "enter value" }})" Style="width:100%;text-align:end" />
                                            </RadzenFormField>
                                            <ValidationMessage For="@(()=> estadoContableDto.primaEmision)" />
                                        </RadzenStack>
                                    </div>

                                    <div class="w-50">

                                        <RadzenStack class="mt-2 mb-2">
                                            <RadzenFormField Text="Reserva Legal" Style="width:100%; ">
                                                <RadzenNumeric TValue="decimal" Format="c" Culture=@argentinianCulture @bind-Value=@estadoContableDto.reservaLegal InputAttributes="@(new Dictionary<string,object>(){ { "aria-label", "enter value" }})" Style="width:100%;text-align:end" />
                                            </RadzenFormField>
                                            <ValidationMessage For="@(()=> estadoContableDto.reservaLegal)" />
                                        </RadzenStack>


                                        <RadzenStack class="mt-2 mb-2">
                                            <RadzenFormField Text="Resultados Acumulados del Ejercicio" Style="width:100%">
                                                <RadzenNumeric TValue="decimal" Format="c" Culture=@argentinianCulture @bind-Value=@estadoContableDto.gananciasPerdidasInicioEjercicio InputAttributes="@(new Dictionary<string,object>(){ { "aria-label", "enter value" }})" Style="width:100%;text-align:end" />
                                            </RadzenFormField>
                                        </RadzenStack>

                                        <RadzenStack class="mt-2 mb-2">
                                            <RadzenFormField Text="Resultados del Ejercicio" Style="width:100%">
                                                <RadzenNumeric TValue="decimal" Format="c" Culture=@argentinianCulture @bind-Value=@estadoContableDto.resultadosEjercicio InputAttributes="@(new Dictionary<string,object>(){ { "aria-label", "enter value" }})" Style="width:100%;text-align:end" />
                                            </RadzenFormField>
                                        </RadzenStack>

                                        <RadzenStack>
                                            <RadzenFormField Text="Total Otros Rubros" Style="width:100%">
                                                <RadzenNumeric TValue="decimal" Format="c" Culture=@argentinianCulture @bind-Value=@totalOtrosRubros InputAttributes="@(new Dictionary<string,object>(){ { "aria-label", "enter value" }})" Style="width:100%;" Disabled />
                                            </RadzenFormField>
                                        </RadzenStack>
                                    </div>

                                </div>

                                <!--Otros Rubros PN -->
                                <h5 class="card-header " style="font-weight: 400;color:#15153D">Otros Rubros</h5>

                                <div class="d-flex flex-column gap-1">
                                    <Form Model="rubroDto">

                                        <div class="d-flex gap-1 mt-2 mb-2 w-100">
                                            <RadzenStack class="w-75">
                                                <RadzenFormField Text="Denominación" >
                                                    <RadzenTextBox @bind-Value="@rubroDto.denominacion" id="txtAddress" />
                                                </RadzenFormField>
                                                <ValidationMessage For="@(()=> rubroDto.denominacion)" />
                                            </RadzenStack>

                                            <RadzenStack class="w-25" >
                                                <RadzenFormField Text="Importe" >
                                                    <RadzenNumeric TValue="decimal" Format="c" Culture=@argentinianCulture @bind-Value=@rubroDto.importe InputAttributes="@(new Dictionary<string,object>(){ { "aria-label", "enter value" }})" Style="width:100%;text-align:end" />
                                                </RadzenFormField>
                                                <ValidationMessage For="@(()=> rubroDto.importe)" />
                                            </RadzenStack>
                                        </div>

                                        <RadzenButton ButtonStyle="ButtonStyle.Primary" class="d-flex justify-content-center" Click="@insertRubro">Agregar</RadzenButton>
                                    </Form>
                                </div>

                            </div>

                            <RadzenGrid @ref=grid Data="estadoContableDto.otrosRubros.AsEnumerable()" TItem="RubroPatrimonioNetoDto">
                                <Columns>
                                    <RadzenGridColumn TItem="RubroPatrimonioNetoDto" Property="denominacion" Title="Denominación" />
                                    <RadzenGridColumn TItem="RubroPatrimonioNetoDto" Property="importe" Title="Importe" Format="{0.00}" Type="decimal" />
                                    <RadzenGridColumn TItem="RubroPatrimonioNetoDto">
                                        <Template Context="rubro">
                                            <RadzenGridColumn TItem="RubroPatrimonioNetoDto" Title="Acción" />
                                            <RadzenButton Icon="delete" ButtonStyle="ButtonStyle.Danger" Click="@(() => deleteRubro(rubro))"></RadzenButton>
                                        </Template>
                                    </RadzenGridColumn>
                                </Columns>
                            </RadzenGrid>
                            
                        </div>

                    </div>

                </div>


                <RadzenStack class="mt-2 mb-2">
                    <RadzenButton ButtonType="Radzen.ButtonType.Submit" Click="@insertEECC" ButtonStyle="ButtonStyle.Primary">Guardar</RadzenButton>
                </RadzenStack>

            </RadzenCard>

        </EditForm>
    </div>
</div>


@code {

    private CultureInfo argentinianCulture = new CultureInfo("es-AR");

    RadzenGrid<RubroPatrimonioNetoDto> grid;

    [Parameter]
    public string? TipoEntidad { get; set; }

    private string denominacionDto = "";
    private decimal importeDto = 0;
    private decimal totalOtrosRubros;

    private RubroPatrimonioNetoDto rubroDto = new RubroPatrimonioNetoDto();
    private EstadoContableDto estadoContableDto = new EstadoContableDto();

    [Parameter]
    public string? balid { get; set; }

    [Parameter]
    public string sesionId { get; set; }

    private string[] tipoDeBalance =
      {
            "Anual",
            "Irregular",
            "De liquidación",
            "Otro"
    };

    protected override async Task OnInitializedAsync()
    {


        await Load();
        await base.OnInitializedAsync();
    }

    private async Task Load()
    {
        ResponseDTO<BalanceDto> rsp = new();
        try
        {
            sesionId = await sessionStorage.GetItemAsync<string>("SessionId");
            if (sesionId == null)
            {
                var sesionRespuesta = await sesionService.getNewSession();
                sesionId = sesionRespuesta.Result;
                sessionStorage.SetItemAsync("SessionId", sesionId);
            }
            else
            {
                var rst = await sesionService.getBalanceId(sesionId);
                if (rst is not null)
                {
                    balid = rst;
                    rsp = await balanceService.getBalance(balid);
                    if (rsp.IsSuccess)
                    {
                        TipoEntidad = rsp.Result.Caratula.Entidad.TipoEntidad;

                        estadoContableDto.fechaInicio = rsp.Result.Caratula.FechaInicio;
                        estadoContableDto.fechaEstado = rsp.Result.Caratula.FechaDeCierre;
                        estadoContableDto.SesionId = sesionId;
                        if(rsp.Result.EstadoContable != null){

                            estadoContableDto = mapper.Map<EstadoContableDto>(rsp.Result.EstadoContable);
                            estadoContableDto.fechaInicio = rsp.Result.Caratula.FechaInicio;
                            estadoContableDto.fechaEstado = rsp.Result.Caratula.FechaDeCierre;
                        }else{
                         await estadoContableService.insertEECC(estadoContableDto);
                        }

                    }
                }




            }
            await grid.Reload();
            StateHasChanged();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"SessionId: Hubo un problema con la solicitud fetch: {ex.Message}");
        }
    }

    private async Task<ResponseDTO<BalanceDto>> insertEECC()
    {

        estadoContableDto.activoCorriente = SumaEECC.ActivoCorriente(estadoContableDto);
        estadoContableDto.activoNoCorriente = SumaEECC.ActivoNoCorriente(estadoContableDto);
        estadoContableDto.totalActivo = SumaEECC.TotalActivo(estadoContableDto);
        estadoContableDto.totalPasivo = SumaEECC.TotalPasivo(estadoContableDto);
        estadoContableDto.patrimonioNeto = SumaEECC.PatrimonioNeto(estadoContableDto);
        estadoContableDto.totalRubro = SumaEECC.OtrosRubrosPatrimonioNeto(estadoContableDto);
        decimal OtrosRubrosPatrimonioNeto = SumaEECC.OtrosRubrosPatrimonioNeto(estadoContableDto);


        ResponseDTO<BalanceDto> rsp = new();
        try
        {


            estadoContableDto.SesionId = sesionId;
            rsp = await estadoContableService.insertEECC(estadoContableDto);
            StateHasChanged();

            estadoContableDto.patrimonioNeto = SumaEECC.PatrimonioNeto(estadoContableDto);

            if (rsp.IsSuccess)
            {

                rsp.Message = "Se inserto el Estado Contable sastifactoriamente";

                notificationService.Notify(new NotificationMessage
                    {
                        Severity = NotificationSeverity.Success,
                        Duration = 3000,
                        Summary = "Datos guardados correctamente"
                    });



                if (estadoContableDto.patrimonioNeto != OtrosRubrosPatrimonioNeto)
                {
                    var alerta = await swal.FireAsync(new SweetAlertOptions
                        {
                            Title = "Error en el balanceo",
                            Text = $"El total del patrimonio neto: ${estadoContableDto.patrimonioNeto} ARS no coincide con el total de Rubros del Patrimonio neto: ${OtrosRubrosPatrimonioNeto} ARS",
                            Icon = SweetAlertIcon.Warning,
                            ConfirmButtonText = "Cerrar"

                        });

                }

            }
            else
            {
                rsp.Message = "No se inserto el Estado Contable";
                notificationService.Notify(new NotificationMessage
                    {

                        Severity = NotificationSeverity.Error,
                        Duration = 3000,
                        Summary = "No se pudieron guardar los datos"


                    });
            }



        }
        catch (Exception ex)
        {
            rsp.Message = ex.Message;
        }

        return rsp;
    }


    private async Task<ResponseDTO<BalanceDto>> insertRubro()
    {

        var rsp = new ResponseDTO<BalanceDto>();
        try
        {
            rubroDto.codigo = Guid.NewGuid().ToString();
            rubroDto.SesionId = sesionId;
            RubroDtoValidator rubrodtovalidator = new();
            ValidationResult resultadoValidacion = rubrodtovalidator.Validate(rubroDto);



            if (resultadoValidacion.IsValid)
            {
                rsp = await estadoContableService.insertRubro(rubroDto);
                if (rsp.IsSuccess)
                {
                     
                    totalOtrosRubros += rubroDto.importe;
                    var result = rsp.Result;
                    if (result != null)
                    {
                        setListOtrosRubros(result.EstadoContable.OtrosRubros);
                        rsp.Message = "Se inserto el rubro sastifactoriamente";
                        await grid.Reload();
                        StateHasChanged();
                    }
                }
                else
                {
                    rsp.Message = "No se inserto el rubro";
                }
            }
        }
        catch (Exception ex)
        {
            rsp.Message = ex.Message;
        }

        return rsp;
    }

    private async Task<ResponseDTO<BalanceDto>> deleteRubro(RubroPatrimonioNetoDto rubroDto)
    {
        var respuesta = new ResponseDTO<BalanceDto>();
        try
        {
            rubroDto.SesionId = sesionId;
            respuesta = await estadoContableService.deleteRubro(rubroDto);

            if (respuesta.IsSuccess)
            {
                totalOtrosRubros -= rubroDto.importe;
                estadoContableDto.otrosRubros.Remove(rubroDto);
                respuesta.Message = "Se eliminó el rubro sastifactoriamente";

                await grid.Reload();
                StateHasChanged();
            }
            else
            {
                respuesta.Message = "No se eliminó el rubro sastifactoriamente";
            }
        }
        catch (Exception ex)
        {
            respuesta.Message = ex.Message;
        }

        return respuesta;
    }


    public void setListOtrosRubros(List<RubroPatrimonioNeto> rubros)
    {
        if (rubros != null)
        {
            estadoContableDto.otrosRubros.Clear();

            foreach (var rubro in rubros)
            {
                estadoContableDto.otrosRubros.Add(new RubroPatrimonioNetoDto { codigo = rubro.Codigo, denominacion = rubro.Denominacion, importe = rubro.Importe, });

            }
        }
    }


}








