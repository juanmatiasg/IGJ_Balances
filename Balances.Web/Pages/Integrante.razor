@page "/Integrante"
@using Balances.DTO;
@using Balances.Web.Services.Implementation;
@inject ISociosService socioService;

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Estado Contable</title>
    <!-- Agrega los enlaces a los estilos de Bootstrap y otros recursos aquí -->
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
</head>
<body>
    <!--Navegacion-->
    <div class="d-flex justify-content-center align-items-center">
        <h3 class="fs-2 font-weight mt-4 mb-4">
            <p>Entidad:</p>
        </h3>
    </div>
    <ul class="nav nav-tabs d-flex justify-content-center">
        <li class="nav-item">
            <a class="nav-link" disabled href="/Caratula">Caratula</a>
        </li>
        <li class="nav-item" disabled>
            <a class="nav-link" href="/EstadoContable">Estado</a>
        </li>
        <li class="nav-item" disabled>
            <a class="nav-link" href="/Libros">Libros</a>
        </li>
        <li class="nav-item" active disabled>
            <a class="nav-link" href="/Contador">Contador</a>
        </li>
        <li class="nav-item" disabled>
            <a class="nav-link" href="/Autoridad">Autoridad</a>
        </li>
        <li class="nav-item" disabled>
            <a class="nav-link" href="/Integrante">Integrante</a>
        </li>
        <li class="nav-item" disabled>
            <a class="nav-link" href="/Archivos">Archivos</a>
        </li>
        <li class="nav-item" disabled>
            <a class="nav-link" href="/Confirmacion">Confirmación DJ</a>
        </li>
    </ul>


    <!---------------------------------------------------------------->
    <!-- Tabs -->
    <div class="container mt-4">
        <ul class="nav nav-tabs" style="width: 1200px;">
            <li class="nav-item">
                <a class="nav-link active" href="#">Integrante Humano</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="/IntegranteJuridico">Integrante Jurídico</a>
            </li>
        </ul>
        <hr style="width: 1130px;" />
    </div>

    <!-- Formulario de Datos del Integrante -->
    <div class="container mt-4">
        <form class="card">
            <div class="card-body">
                <h5 class="card-title" style="margin-bottom: 20px; color: #0375bc; font-weight: bold; text-align: center;">
                    Datos del Integrante
                </h5>
                <div class="form-group">
                    <label for="accionistaNombre">Nombre</label>
                    <input type="text" class="form-control" @bind="modelPersonaHumana.Nombre">
                </div>
                <div class="form-group">
                    <label for="accionistaNombre">Apellido</label>
                    <input type="text" class="form-control" id="accionistaNombre" @bind="modelPersonaHumana.Apellido">
                </div>
                <label for="selectTipoDocumento">Tipo de Documento</label>
                <select id="selectTipoDocumento" class="form-control" @bind="modelPersonaHumana.TipoDocumento">
                    <option selected>Seleccionar...</option>
                    <option value="DNI">DNI</option>
                    <option value="Pasaporte">Pasaporte</option>
                    <option value="Cédula">Cédula</option>
                </select>
                <div class="form-group">
                    <label for="accionistaNombre">Numero de Documento</label>
                    <input type="text" class="form-control" id="accionistaNombre" @bind="modelPersonaHumana.NroDocumento">
                </div>
                <div class="form-group">
                    <label for="accionistaNombre">Número de Identificación Fiscal</label>
                    <input type="text" class="form-control" id="accionistaNombre" @bind="modelPersonaHumana.NroFiscal">
                </div>
                <div class="form-group">
                    <label for="accionistaNombre">Cuotas</label>
                    <input type="text" class="form-control" @bind="modelPersonaHumana.Cuotas">
                </div>
                <div class="form-group">
                    <label for="accionistaNombre">Votos</label>
                    <input type="text" class="form-control"@bind="modelPersonaHumana.Votos">
                </div>
                <!-- Rest of the form content -->
                <div class="form-group text-center mt-4">
                    <button type="button" class="btn btn-primary w-100" @onclick="addPersonaHumana">Agregar</button>
                </div>
            </div>
        </form>
    </div>

    <!-- Lista de Integrantes -->
    <div class="container mt-4">
        <div class="card">
            <div class="card-header" style="color: #0375bc; font-weight: bold; text-align: center;">
                Integrantes
            </div>
            <div class="card-body">
                <form>
                    @foreach (var personaHumana in listPersonaHumana)
                    {
                        <div class="form-row">
                            <div class="form-group col-md-3">
                                <label for="inputApellidoNombre">Apellido y Nombre</label>
                                <input type="text" class="form-control" id="inputApellidoNombre" placeholder="Apellido y Nombre" value="@personaHumana.Apellido @personaHumana.Nombre" disabled>
                            </div>
                            <div class="form-group col-md-3">
                                <label for="inputNroDocumento">Nro Documento</label>
                                <input type="text" class="form-control" id="inputNroDocumento" placeholder="Nro Documento" value="@personaHumana.NroDocumento" disabled>
                            </div>
                            <div class="form-group col-md-3">
                                <label for="inputCUIT">CUIT</label>
                                <input type="text" class="form-control" id="inputCUIT" placeholder="CUIT" value="@personaHumana.NroFiscal" disabled>
                            </div>
                            <div class="form-group col-md-3">
                                <label for="inputCargo">Cantidad</label>
                                <input type="text" class="form-control" id="inputCargo" placeholder="Cuotas/Votos" value="@personaHumana.Cuotas/@personaHumana.Votos" disabled>
                            </div>

                            <div class="col">
                                <button type="button" class="btn btn-danger" @onclick="() => deletePersonaHumana(personaHumana)">Eliminar</button>
                            </div>
                        </div>
                    }
                </form>
            </div>
        </div>
    </div>

</body>

</html>

@code {

    private string idSession = "";
    private PersonaHumanaDto modelPersonaHumana = new PersonaHumanaDto();
    private List<PersonaHumanaDto> listPersonaHumana = new List<PersonaHumanaDto>();


    protected override async Task OnInitializedAsync()
    {

        await Load();

        await base.OnInitializedAsync();
    }

    private async Task Load()
    {
        try
        {
            var idSession = await socioService.getSession();

            if (idSession.IsSuccess)
            {
                var response = await socioService.getBalance(idSession.Result);

                if (idSession.IsSuccess == true)
                {

                    try
                    {
                        resultPersonaHumana(response.Result.Socios.PersonasHumanas);

                        StateHasChanged();

                    }
                    catch (Exception ex)
                    {

                        Console.WriteLine($"GetBalance: Hubo un problema con la solicitud fetch: {ex.Message}");
                    }
                }
            }
          
        }
        catch (Exception ex)
        {
            Console.WriteLine($"SessionId: Hubo un problema con la solicitud fetch: {ex.Message}");

        }

    }

    private async Task<ResponseDTO<BalanceDto>> addPersonaHumana()
    {
        ResponseDTO<BalanceDto> respuesta = new();

        try
        {

            respuesta = await socioService.insertPersonaHumana(modelPersonaHumana);


            if (respuesta.IsSuccess)
            {

                resultPersonaHumana(respuesta.Result.Socios.PersonasHumanas);

                // Limpiar los campos después de una inserción exitosa
                cleanInputsHumana();


            }

        }
        catch (Exception ex)
        {
            respuesta.Message = ex.Message;
        }
        return respuesta;
    }

    private void cleanInputsHumana()
    {
        // Restablecer los valores de los campos a su estado inicial o vacío
        modelPersonaHumana = new PersonaHumanaDto();
    }

    private void resultPersonaHumana(List<PersonaHumanaDto> listPersonaHumana)
    {
        this.listPersonaHumana = listPersonaHumana;

    }

    private async Task<ResponseDTO<BalanceDto>> deletePersonaHumana(PersonaHumanaDto personaHumanaDto)
    {
        var respuesta = new ResponseDTO<BalanceDto>();
        try
        {
            respuesta = await socioService.deletePersonaHumana(personaHumanaDto);

            if (respuesta.IsSuccess)
            {

                listPersonaHumana = respuesta.Result.Socios.PersonasHumanas;

            }


        }
        catch (Exception ex)
        {
            respuesta.Message = ex.Message;
        }
        return respuesta;
    }
}
