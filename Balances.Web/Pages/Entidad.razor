@page "/Entidad"
@using Balances.DTO;
@using Balances.Web.Services.Implementation;
@using Microsoft.JSInterop
@using Balances.Web.Services
@using System.Text.RegularExpressions;
@using Newtonsoft.Json;
@inject IJSRuntime JS
@inject ICaratulaService caratulaService
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@inject NavigationManager NavigationManager




<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Búsqueda de Entidad</title>
        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" />

        <!-- Bootstrap 5 CSS -->
        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">

      


    </head>

    <body>

        <!--Navegacion-->
        <div class="d-flex justify-content-center align-items-center">
            <h3 class="fs-2 font-weight mt-4 mb-4">
                 <p>Entidad:&nbsp; <h3 id="entidad">@entidad</h3></p>
            </h3>
        </div>
        <ul class="nav nav-tabs d-flex justify-content-center">
            <li class="nav-item">
                <a class="nav-link text-primary active" aria-current="page" href="/Entidad">Entidad</a>
            </li>
            <li class="nav-item" disabled>
                <a class="nav-link text-secondary" href="/EstadoContable">Estado</a>
            </li>
            <li class="nav-item" disabled>
                <a class="nav-link text-secondary" href="/Libros">Libros</a>
            </li>
            <li class="nav-item" disabled>
                <a class="nav-link text-secondary" href="/Contador">Contador</a>
            </li>
            <li class="nav-item" disabled>
                <a class="nav-link text-secondary" href="/Autoridad">Autoridad</a>
            </li>
            <li class="nav-item" disabled>
                <a class="nav-link text-secondary" href="/Integrante">Integrante</a>
            </li>
            <li class="nav-item" disabled>
                <a class="nav-link text-secondary" href="/Archivos">Archivos</a>
            </li>
            <li class="nav-item" disabled>
                <a class="nav-link text-secondary" href="/Confirmacion">Confirmación DJ</a>
            </li>
        </ul>


        <!---------------------------------------------------------------->
        <!--Entidad-->

        <div class="container mt-2 mb-3">
            <div class="card mx-auto" style="width: 800px;">
                <div class="card-header" style="color: #0375bc; font-weight: bold; text-align: center;">
                    Entidad
                </div>


                <div class="card-body">
                    <div class="row d-flex justify-content-center align-items-end position-relative">
                    
                        <div class="col">
                            <label for="busqueda">Nro.Correlativo/CUIT/CUIL</label>
                            <input type="text"  @bind="@nroCorrelativo" class="form-control" required data-bs-toggle="tooltip" data-bs-placement="top">
                            <small id="busquedaError" class="text-danger">@busquedaError</small>
                        </div>
                 
                        <div class="col mt-4">
                            <button type="submit" id="btnBuscar" class="btn btn-primary" @onclick="FindEntities">Buscar</button>
                        </div>
                    </div>


                    <div class="row mt-2">
                        <div class="col-12 col-md-3">
                            <p class="control texto">Razón Social:</p>
                        </div>
                        <div class="col">
                        <p id="razonSocial">@razonSocial</p>
                        </div>                       
                    </div>
                    <div class="row mt-2">
                        <div class="col-12 col-md-3">
                            <p class="control texto">Tipo de Entidad:</p>
                        </div>
                        <div class="col">
                        <p id="tipoEntidad">@tipoEntidad</p>
                        </div>
                    </div>

                    <div class="col mt-4 d-flex justify-content-center align-items-center">
                        <div id="ReCaptchContainer" class="control texto" lang="es"></div>

                        <!-- Display the reCAPTCHA token in the same container -->
                        @if (!string.IsNullOrEmpty(reCAPTCHAToken))
                        {
                            <div class="alert alert-success mt-2" role="alert">
                                ReCAPTCHA Token: @reCAPTCHAToken
                            </div>
                        }
                    </div>
           
                
                </div>
            </div>
        
            <!--Datos Personales -->

       <div class="card mx-auto mt-4 " style="width: 800px;">
 
            <div class="card-header" style="color: #0375bc; font-weight: bold; text-align: center;">
                Datos Personales
            </div>
            
            @if (@entidadEncontrada)
            {
                <div class="row ps-3 pt-3">
                    <div class="form-group col">
                        <label for="location">Domicilio</label>
                        <input type="text" @bind=@domicilio class="form-control" id="domicilio" placeholder="Domicilio">
                    </div>

                    <div class="col mt-4">
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" value="" id="sedeInscripta" @bind="@sedeSocialInscripta">
                            <label class="form-check-label" for="flexCheckDefault">¿Es Sede Social Inscripta?</label>
                        </div>
                    </div>
                </div>

                <div class="row  ps-3 pt-3 pe-3">
                    <div class="col">
                        <label for="domicilio">Fecha de inicio</label>
                        <input type="date" id="fechaDeInicio" class="form-control" placeholder="Fecha de Inicio" @bind=@fechaDeInicio />
                        <small id="fechaError" class="text-danger">@fechaError</small>

                    </div>
                    <div class="col">
                        <label for="domicilio">Fecha de Cierre</label>
                        <input type="date" id="fechaDeCierre" class="form-control" placeholder="Fecha de Cierre" @bind=@fechaDeCierre />
                        <small id="fechaError" class="text-danger">@fechaError</small>
                    </div>
                </div>

                <div class="row  ps-3 pt-3 pe-3">
                    <div class="col mb-4">
                        <label for="email">Email</label>
                        <input type="email" id="email" class="form-control" required data-bs-toggle="tooltip" @bind=@email data-bs-placement="top" />
                        <small id="emailError" class="text-danger">@emailError</small>
                    </div>
                </div>

                <div class="col mt-4 mb-4 d-flex justify-content-center">
                    <p>Id Session: @idSession</p>
                </div>

                <div class="col mt-4 mb-4 d-flex justify-content-center">
                    <button type="button" id="btnInit" class="btn btn-primary w-50" onclick="@IniciarTramites">Iniciar Trámite</button>
                </div>
           
            }
            else
            {
                <div class="row ps-3 pt-3">
                    <div class="form-group col">
                        <label for="location">Domicilio</label>
                        <input type="text" class="form-control" id="domicilio" placeholder="Domicilio" disabled>

                    </div>

                    <div class="col mt-4">
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" value="" id="sedeInscripta" disabled>
                            <label class="form-check-label" for="flexCheckDefault">¿Es Sede Social Inscripta?</label>
                        </div>
                    </div>
                </div>

                <div class="row  ps-3 pt-3 pe-3">
                    <div class="col">
                        <label for="domicilio">Fecha de inicio</label>
                        <input type="date" id="fechaDeInicio" class="form-control" placeholder="Fecha de Inicio" disabled />
                        <small id="fechaError" class="text-danger"></small>

                    </div>
                    <div class="col">
                        <label for="domicilio">Fecha de Cierre</label>
                        <input type="date" id="fechaDeCierre" class="form-control" placeholder="Fecha de Cierre" disabled />
                        <small id="fechaError" class="text-danger"></small>
                    </div>
                </div>

                <div class="row  ps-3 pt-3 pe-3">
                    <div class="col mb-4">
                        <label for="email">Email</label>
                        <input type="email" id="email" class="form-control" required data-bs-toggle="tooltip" data-bs-placement="top" disabled />
                        <small id="emailError" class="text-danger"></small>
                    </div>
                </div>

               
                <div class="col mt-4 mb-4 d-flex justify-content-center">
                    <button type="button" id="btnInit" class="btn btn-secondary w-50" disabled>Iniciar Trámite</button>
                </div>
        
            }
             </div>
        </div>




        


       

    </body>


</html>

@code {

    private string reCAPTCHAToken;
    private string nroCorrelativo;
    private string busquedaError = "";
    private string razonSocial = "";
    private string tipoEntidad = "";
    private string entidad = "";
    private string email;
    private bool sedeSocialInscripta = false;
    private string domicilio;
    private DateTime fechaDeInicio;
    private DateTime fechaDeCierre;
    private string fechaError ="";
    private string emailError="";
    private bool entidadEncontrada;
    private const string KEY_SESSION = "idSession";
    private string idSession = "";

    private Regex emailRegex = new Regex(@"^[^\s@]+@[^\s@]+\.[^\s@]+$", RegexOptions.Compiled);



    protected override async Task OnInitializedAsync()
    {
        fechaDeInicio = DateTime.Now;
        fechaDeCierre = DateTime.Now;


        idSession = await sessionStorage.GetItemAsync<string>(KEY_SESSION);

        if (idSession != null)
        {

            await getBalance(idSession);
        }

       

        await base.OnInitializedAsync();
    }

    private async Task getBalance(string idBalance)
    {

        var response = await caratulaService.getBalance(idBalance);
        try
        {
            if (response.IsSuccess)
            {
                email = response.Result.Caratula.Email;
                fechaDeInicio = response.Result.Caratula.FechaInicio;
                fechaDeCierre = response.Result.Caratula.FechaDeCierre;
                domicilio = response.Result.Caratula.Entidad.Domicilio;
                nroCorrelativo = response.Result.Caratula.Entidad.Correlativo;
                razonSocial = response.Result.Caratula.Entidad.RazonSocial;
                tipoEntidad = response.Result.Caratula.Entidad.TipoEntidad;
                sedeSocialInscripta = response.Result.Caratula.Entidad.SedeSocialInscripta;

                entidadEncontrada = true;
            }

            else
            {
                entidadEncontrada = false;

            }
            StateHasChanged();


        }
        catch (Exception ex)
        {

            Console.WriteLine($"Hubo un problema con la solicitud fetch: {ex.Message}");
        }
    }


    [JSInvokable("OnReCAPTCHASuccess")]
    private async Task OnReCAPTCHASuccess(string token)
    {
        // Set the reCAPTCHA token
        reCAPTCHAToken = token;

        // Your implementation
        if (!string.IsNullOrEmpty(reCAPTCHAToken))
        {
            await FindEntities();
        }
    }

    private async Task RenderReCAPTCHA()
    {
        // Invoke the JavaScript function
        await JS.InvokeVoidAsync("renderReCAPTCHA", DotNetObjectReference.Create(this), "OnReCAPTCHASuccess");
    }


    private async Task FindEntities()
    {
        int numericNroCorrelativo;

        if (string.IsNullOrEmpty(nroCorrelativo))
        {
            busquedaError = "El campo no puede estar vacío";
            return;
        }

        if (int.TryParse(nroCorrelativo, out numericNroCorrelativo))
        {
            busquedaError = "";


            try
            {
                var response = await caratulaService.findEntities(nroCorrelativo);

                if (response != null)
                {
                    razonSocial = response.Result.RazonSocial ?? "Entidad no encontrada";
                    tipoEntidad = response.Result.TipoEntidad;
                    entidadEncontrada = true;

                }
            }
            catch (Exception ex)
            {
                Console.WriteLine($"Hubo un problema con la solicitud fetch: {ex.Message}");
            }
        }
        else
        {
            busquedaError = "El campo tiene que ser numérico";
        }


    }

    private async Task IniciarTramites()
    {


        try
        {
            var response = await caratulaService.initTramite(email, fechaDeInicio, fechaDeCierre, razonSocial, tipoEntidad, domicilio, sedeSocialInscripta, nroCorrelativo);

            if (response.IsSuccess)
            {
                 await sessionStorage.SetItemAsync(KEY_SESSION, response.Result.Id);
                 
                 NavigationManager.NavigateTo("EstadoContable");

            }
            else
            {
                Console.WriteLine($"Datos" + response.Message);
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Hubo un problema con la solicitud fetch: {ex.Message}");
        }

        

      
    }

  

   
}

