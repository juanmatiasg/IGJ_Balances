@using Balances.DTO;
@using Balances.Web.Pages;
@inject NavigationManager NavigationManager


<!--Barra de informacion balance-->
@if (NroCorrelativo != null)
{
    <Div class="d-flex gap-3 justify-content-xl-center justify-content-md-start align-items-center w-100 p-1 rounded-0" style="background-color:dimgray; border-top: 2mm ridge rgba(237, 169, 63, .6);">
        <Span Class="text-white fw-bolder">@RazonSocial @TipoEntidad</Span>
        <Span Class="text-white fw-bolder">-@NroCorrelativo-</Span>
        <img src="icon/balance2.png" style="height:1.5rem; width:auto;" />
        <Span Class="text-white fw-bolder">Cierre @FechaDeCierre?.ToString("yyyy") - </Span>
        <Span Class="text-white fw-bolder">@FechaDeCierre?.ToString("dd/MM/yyyy")</Span>
        <Span Class="text-white fw-bolder position-absolute mx-2" Style="right:0;">Id: @IdBalance / @(Rectificacion ? "Rectificación" : "Original")</Span>
    </Div>
}
else
{
    <Div class="d-flex gap-3 justify-content-xl-center justify-content-md-start align-items-center w-100 p-1 rounded-0" style="background-color:dimgray; border-top: 2mm ridge rgba(237, 169, 63, .6);">
        <Span Class="text-white fw-bolder">@RazonSocial @TipoEntidad</Span>
        <Span Class="text-white fw-bolder visually-hidden">-@NroCorrelativo-</Span>
        <img src="icon/balance2.png" style="height:1.5rem; width:auto;" class=" opacity-0" />
        <Span Class="text-white visually-hidden fw-bolder">Cierre @FechaDeCierre?.ToString("yyyy") - </Span>
        <Span Class="text-white visually-hidden fw-bolder">@FechaDeCierre?.ToString("dd/MM/yyyy")</Span>
        <Span Class="text-white fw-bolder position-absolute visually-hidden mx-2" Style="right:0;">Id: @IdBalance</Span>
    </Div>
}

<!--Barra de navegación-->

<style>

    .rz-tabview-panel {
        padding: 0 !important;
    }
</style>

<div class="container-fluid  my-0">
    <RadzenStack Orientation="Radzen.Orientation.Horizontal" JustifyContent="Radzen.JustifyContent.Center" class="rz-tabview-panel">

        <RadzenTabs Change="OnChange" TabPosition="@tabPosition" SelectedIndex="@GetSelectedIndex()" RenderMode="TabRenderMode.Client">
            <Tabs>
                <div class="container d-flex flex-wrap navbar navbar-expand-xl">
                    <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNavAltMarkup" aria-controls="navbarNavAltMarkup" aria-expanded="false" aria-label="Toggle navigation">
                        <span class="navbar-toggler-icon"></span>
                    </button>
                    <div class=" collapse navbar-collapse" id="navbarNavAltMarkup">

                        <RadzenTabsItem Text="Carátula" Class="@((PaginaActiva == "Caratula"))"></RadzenTabsItem>


                        <RadzenTabsItem Text="Estados Contables" Class="@((PaginaActiva == "EstadoContable"))" Disabled="@(TramiteIniciado ? false : true)">

                        </RadzenTabsItem>
                        <RadzenTabsItem Text="Libros" Class="@((PaginaActiva == "Libros") )" Disabled="@(TramiteIniciado ? false : true)">

                        </RadzenTabsItem>
                        <RadzenTabsItem Text="Contador" Class="@((PaginaActiva == "Contador"))" Disabled="@(TramiteIniciado ? false : true)">

                        </RadzenTabsItem>
                        <RadzenTabsItem Text="Autoridades" Class="@((PaginaActiva == "Autoridades"))" Disabled="@(TramiteIniciado ? false : true)">

                        </RadzenTabsItem>
                        <RadzenTabsItem Text="Integrantes" Class="@((PaginaActiva == "Integrantes") )" Disabled="@(TramiteIniciado ? false : true)">

                        </RadzenTabsItem>
                        <RadzenTabsItem Text="Documentación" Class="@((PaginaActiva == "Archivos"))" Disabled="@(TramiteIniciado ? false : true)">

                        </RadzenTabsItem>
                        <RadzenTabsItem Text="Confirmación" Class="@((PaginaActiva == "Confirmacion") )" Disabled="@(TramiteIniciado ? false : true)">

                        </RadzenTabsItem>
                    </div>
                </div>
            </Tabs>
        </RadzenTabs>
    </RadzenStack>
</div>



@code {
    [Parameter] public static string? NroCorrelativo { get; set; }
    [Parameter] public static string? TipoEntidad { get; set; }
    [Parameter] public static string? RazonSocial { get; set; }
    [Parameter] public static DateTime? FechaDeCierre { get; set; }
    [Parameter] public static string? IdBalance { get; set; }
    [Parameter] public static bool Rectificacion { get; set; }


    [Parameter] public string? PaginaActiva { get; set; } = "Caratula";
    [Parameter] public bool TramiteIniciado { get; set; }
    [Parameter] public string? balid { get; set; } = null;

    Radzen.TabPosition tabPosition = Radzen.TabPosition.Top;


    void OnChange(int index)
    {
        Console.WriteLine($"Tab with index {index} was selected.");


        switch (index)
        {
            case 0:
                PaginaActiva = "Caratula";
                break;
            case 1:
                PaginaActiva = "EstadoContable";
                break;
            case 2:
                PaginaActiva = "Libros";
                break;
            case 3:
                PaginaActiva = "Contador";
                break;
            case 4:
                PaginaActiva = "Autoridad";
                break;

            case 5:
                PaginaActiva = "Integrante";
                break;
            case 6:
                PaginaActiva = "Archivos";
                break;
            case 7:
                PaginaActiva = "Confirmacion";
                break;
            default:
                // Por defecto, no hacer nada
                break;
        }

        // Después de actualizar PaginaActiva, puedes construir la URL y navegar a ella
        var url = PaginaActiva + "/" + balid;
        Console.WriteLine("Navegando a: " + url);
        NavigationManager.NavigateTo(url);
    }
    int GetSelectedIndex()
    {
        switch (PaginaActiva)
        {
            case "Caratula":
                return 0;
            case "EstadoContable":
                return 1;
            case "Libros":
                return 2;
            case "Contador":
                return 3;
            case "Autoridad":
                return 4;
            case "Integrante":
                return 5;
            case "Archivos":
                return 6;
            case "Confirmacion":
                return 7;// Agrega más casos según sea necesario para las demás pestañas
            default:
                return 0; // Si no se encuentra ninguna coincidencia, selecciona la primera pestaña como predeterminada
        }
    }

}
