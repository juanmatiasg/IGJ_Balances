@using Balances.DTO;
@using Balances.Web.Pages;
@inject NavigationManager NavigationManager


<RadzenStack Orientation="Radzen.Orientation.Horizontal" JustifyContent="Radzen.JustifyContent.Center">
    
    <RadzenTabs Change="OnChange" TabPosition="@tabPosition" SelectedIndex="@GetSelectedIndex()"  RenderMode="TabRenderMode.Client">
        <Tabs>
            <div class="container d-flex flex-wrap">
               
            <RadzenTabsItem Text="Carátula" Class="@((PaginaActiva == "Caratula"))"></RadzenTabsItem>
            
            
            <RadzenTabsItem Text="Estado Contable" Class="@((PaginaActiva == "EstadoContable"))" Disabled="@(TramiteIniciado ? false : true)">
          
            </RadzenTabsItem>
            <RadzenTabsItem Text="Libros" Class="@((PaginaActiva == "Libros") )" Disabled="@(TramiteIniciado ? false : true)">
           
            </RadzenTabsItem>
            <RadzenTabsItem Text="Contador" Class="@((PaginaActiva == "Contador"))" Disabled="@(TramiteIniciado ? false : true)">
           
            </RadzenTabsItem>
            <RadzenTabsItem Text="Autoridades" Class="@((PaginaActiva == "Autoridades"))" Disabled="@(TramiteIniciado ? false : true)">
            
            </RadzenTabsItem>
            <RadzenTabsItem Text="Integrantes" Class="@((PaginaActiva == "Integrantes") )" Disabled="@(TramiteIniciado ? false : true)">
       
            </RadzenTabsItem>
            <RadzenTabsItem Text="Documentación" Class="@((PaginaActiva == "Documentacion"))" Disabled="@(TramiteIniciado ? false : true)">
               
            </RadzenTabsItem>
            <RadzenTabsItem Text="Confirmación" Class="@((PaginaActiva == "Confirmacion") )" Disabled="@(TramiteIniciado ? false : true)">
           
            </RadzenTabsItem>
                </div>
        </Tabs>
    </RadzenTabs>
</RadzenStack>




@code {
   
    [Parameter] public string? PaginaActiva { get; set; } = "Caratula";
    [Parameter] public bool TramiteIniciado { get; set; }
    [Parameter] public string? balid { get; set; } = null;
  
    Radzen.TabPosition tabPosition = Radzen.TabPosition.Top;
        
   
    void OnChange(int index)
    {
        Console.WriteLine($"Tab with index {index} was selected.");
        

        switch (index)
        {
            case 0:
                PaginaActiva = "Caratula";
                break;
            case 1:
                PaginaActiva = "EstadoContable";
                break;
            case 2:
                PaginaActiva = "Libros";
                break;
            case 3:
                PaginaActiva = "Contador";
                break;
            case 4:
                PaginaActiva = "Autoridad";
                break;

            case 5:
                PaginaActiva = "Integrante";
                break;
            case 6:
                PaginaActiva = "Documentacion";
                break;
            case 7:
                PaginaActiva = "Confirmacion";
                break;
            default:
                // Por defecto, no hacer nada
                break;
        }

        // Después de actualizar PaginaActiva, puedes construir la URL y navegar a ella
        var url = PaginaActiva + "/" + balid;
        Console.WriteLine("Navegando a: " + url);
        NavigationManager.NavigateTo(url);
    }
    int GetSelectedIndex()
    {
        switch (PaginaActiva)
        {
            case "Caratula":
                return 0;
            case "EstadoContable":
                return 1;
            case "Libros":
                return 2;
            case "Contador":
                return 3;
            case "Autoridad":
                return 4;
            case "Integrante":
                return 5;
            case "Documentacion":
                return 6;
            case "Confirmacion":
                return 7;// Agrega más casos según sea necesario para las demás pestañas
            default:
                return 0; // Si no se encuentra ninguna coincidencia, selecciona la primera pestaña como predeterminada
        }
    }

}
